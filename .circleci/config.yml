---
version: 2

templates:
  filter_deploy: &filter_deploy
    filters:
      branches:
        only: master

jobs:
  backend:
    docker:
      - image: circleci/python:3.6.4
    steps:
      - checkout
      - restore_cache:
          keys:
            - pip-packages-v1-{{ .Branch }}
            - pip-packages-v1-
      - run: pipenv install -e .[testing]
      - save_cache:
          paths:
            - ~/.local/
          key: pip-package-v1-{{ .Branch }}
      - run: pipenv run flake8 wagtail
      - run: pipenv run isort --check-only --diff --recursive wagtail
      # Filter out known false positives, while preserving normal output and error codes.
      # See https://github.com/motet-a/jinjalint/issues/18.
      # And https://circleci.com/docs/2.0/configuration-reference/#default-shell-options.
      - run:
          shell: /bin/bash -e
          command: pipenv run jinjalint --parse-only wagtail | grep -v 'welcome_page.html:6:70' | tee /dev/tty | wc -l | grep -q '0'
      - run: DATABASE_NAME=wagtail.db pipenv run python -u runtests.py

  frontend:
    docker:
      - image: circleci/node:8.11.3
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - node-v1-{{ .Branch }}-
            - node-v1-
      - run: npm install --no-save
      - save_cache:
          paths:
            - ~/project/node_modules/
          key: node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run: npm run lint:js
      - run: npm run lint:css
      - run: npm run test:unit:coverage -- --runInBand
      - run: npm rebuild node-sass
      - run: npm run dist
      - run: bash <(curl -s https://codecov.io/bash) -F frontend

  build_and_deploy:
    docker:
      - image: circleci/python:3.6.4-node
    steps:
      - checkout
      - run: pipenv install -e .[testing]
      - run: pipenv install awscli==1.14.0
      # We need to pin to a certain version of the awscli here because of a conflict in the botocore lib otherwise
      - run: npm install --no-save
      - run: python setup.py sdist
      - run: pipenv run aws s3 cp ./dist/* s3://$AWS_S3_BUCKET --acl public-read



workflows:
    version: 2
    build-test-deploy:
        jobs:
          - backend
          - frontend
          - build_and_deploy:
              <<: *filter_deploy
              requires:
                - backend
                - frontend

